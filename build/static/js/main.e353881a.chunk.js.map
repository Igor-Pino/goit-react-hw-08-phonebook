{"version":3,"sources":["components/ContactsList/ContactsList.module.scss","components/ContactItem/ContactItem.module.scss","styles/base.module.scss","components/ContactFilter/ContactFilter.module.scss","redux/contactSlice.js","redux/actions/contacts-actions.js","redux/reducers/contacrBookReducer.js","redux/store.js","components/ContactInput/ContactInput.js","components/ContactItem/ContactItem.js","redux/PhoneBook-selectors.js","components/ContactsList/ContactsList.js","components/ContactFilter/ContactFilter.js","App.js","index.js"],"names":["module","exports","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getContacts","query","providesTags","deleteContact","mutation","id","url","method","invalidatesTags","addContact","newContact","body","useGetContactsQuery","useDeleteContactMutation","useAddContactMutation","filterChange","createAction","filter","createReducer","_","action","payload","combineReducers","store","configureStore","reducer","contactBook","contactBookReducer","middleware","getDefaultMiddleware","devTools","process","ContactInput","data","useState","name","setName","phone","setNumber","nameInputId","ShortId","generate","numberInputId","inputContact","isLoading","handelChange","e","target","value","onSubmit","preventDefault","find","contact","toLowerCase","alert","type","pattern","title","required","onChange","disabled","ContactItem","isDeleting","className","s","contactItem","onClick","contact_btn","getFilter","state","ContactsList","isFetching","normalizedFilter","useSelector","visibleContacts","includes","contact_list","map","Filter","dispatch","useDispatch","filterValue","filter_label","App","error","main_container","message","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.e353881a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ContactsList_root__2x1ln\",\"main_container\":\"ContactsList_main_container__3FLhh\",\"title\":\"ContactsList_title__1MwrS\",\"contact_btn\":\"ContactsList_contact_btn__3f4v8\",\"contact_list\":\"ContactsList_contact_list__1MWuH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ContactItem_root__2zXZJ\",\"main_container\":\"ContactItem_main_container__18b7W\",\"title\":\"ContactItem_title__2cBWU\",\"contact_btn\":\"ContactItem_contact_btn__txgnL\",\"contact\":\"ContactItem_contact__11VbG\",\"contact_phone\":\"ContactItem_contact_phone__3qlT6\",\"contactItem\":\"ContactItem_contactItem__ADQn4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"base_root__3GEOD\",\"main_container\":\"base_main_container__2s7LE\",\"title\":\"base_title__3Uaqs\",\"contact_btn\":\"base_contact_btn__2QCZD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ContactFilter_root__1ybBH\",\"main_container\":\"ContactFilter_main_container__13mfc\",\"title\":\"ContactFilter_title__2NH60\",\"contact_btn\":\"ContactFilter_contact_btn__3ZtIz\",\"filter_label\":\"ContactFilter_filter_label__3nr9e\"};","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const contactsApi = createApi({\n  reducerPath: 'contactsApi',\n  baseQuery: fetchBaseQuery({ baseUrl: 'https://61b73cf9c95dd70017d413d0.mockapi.io' }),\n  tagTypes: ['contact'],\n  endpoints: builder => ({\n    getContacts: builder.query({\n      query: () => '/contacts',\n      providesTags: ['contact'],\n    }),\n    deleteContact: builder.mutation({\n      query: id => ({\n        url: `/contacts/${id}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: ['contact'],\n    }),\n    addContact: builder.mutation({\n      query: newContact => ({\n        url: '/contacts',\n        method: 'POST',\n        body: newContact,\n      }),\n      invalidatesTags: ['contact'],\n    }),\n  }),\n});\n\nexport const { useGetContactsQuery, useDeleteContactMutation, useAddContactMutation } = contactsApi;\n","import { createAction } from '@reduxjs/toolkit';\n\nconst filterChange = createAction('contacts/changeFilter');\n\nexport { filterChange };\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport { filterChange } from '../actions/contacts-actions';\n\nconst filter = createReducer('', {\n  [filterChange]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  filter,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport { contactsApi } from './contactSlice';\nimport contactBookReducer from './reducers/contacrBookReducer';\n\nconst store = configureStore({\n  reducer: {\n    contactBook: contactBookReducer,\n    [contactsApi.reducerPath]: contactsApi.reducer,\n  },\n  middleware: getDefaultMiddleware => [...getDefaultMiddleware(), contactsApi.middleware],\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport { store };\n","import { useState } from 'react';\nimport ShortId from 'shortid';\nimport { useAddContactMutation } from '../../redux/contactSlice';\nimport PropTypes from 'prop-types';\n\nfunction ContactInput({ data }) {\n  const [name, setName] = useState('');\n  const [phone, setNumber] = useState('');\n\n  const nameInputId = ShortId.generate();\n  const numberInputId = ShortId.generate();\n\n  const inputContact = { name, phone };\n\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handelChange = e => {\n    const inputName = e.target.name;\n    switch (inputName) {\n      case 'name':\n        setName(e.target.value);\n        break;\n\n      case 'number':\n        setNumber(e.target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const checkContactName = newContact => {\n    if (data.find(contact => contact.name.toLowerCase() === newContact.name.toLowerCase())) {\n      alert(`${newContact.name} is already in contacts!`);\n      return;\n    }\n    addContact(inputContact);\n  };\n\n  const handelSubmit = e => {\n    e.preventDefault();\n    checkContactName(inputContact);\n    reset();\n  };\n\n  return (\n    <form onSubmit={handelSubmit}>\n      <label id={nameInputId}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          id={nameInputId}\n          onChange={handelChange}\n        />\n      </label>\n      <label id={numberInputId}>\n        Phone\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={phone}\n          id={numberInputId}\n          onChange={handelChange}\n        />\n      </label>\n      <button type=\"submit\" disabled={isLoading}>\n        {isLoading ? 'wait..' : 'add contact'}\n      </button>\n    </form>\n  );\n}\n\nContactInput.propTypes = {\n  data: PropTypes.array,\n};\n\nexport default ContactInput;\n","import React from 'react';\nimport { useDeleteContactMutation } from '../../redux/contactSlice';\nimport PropTypes from 'prop-types';\nimport s from './ContactItem.module.scss';\n\nconst ContactItem = ({ id, name, phone }) => {\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  return (\n    <li className={s.contactItem}>\n      <table>\n        <tbody>\n          <tr>\n            <td>{name}</td>\n            <td>{phone}</td>\n          </tr>\n        </tbody>\n      </table>\n      <button onClick={() => deleteContact(id)} disabled={isDeleting} className={s.contact_btn}>\n        {isDeleting ? 'O' : 'X'}\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","const getFilter = state => state.contactBook.filter;\n\nexport { getFilter };\n","import React from 'react';\nimport ContactItem from '../ContactItem';\nimport s from './ContactsList.module.scss';\nimport { useSelector } from 'react-redux';\nimport { getFilter } from '../../redux/PhoneBook-selectors';\nimport PropTypes from 'prop-types';\n\nconst ContactsList = ({ data, isFetching }) => {\n  const filterValue = useSelector(getFilter);\n  const normalizedFilter = filterValue.toLowerCase();\n\n  const visibleContacts =\n    data && data.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n\n  return (\n    <div>\n      {isFetching ? <h2 className={s.title}>loading...</h2> : <h2 className={s.title}>Contacts</h2>}\n\n      {data && (\n        <ul className={s.contact_list}>\n          {visibleContacts.map(contact => (\n            <ContactItem\n              key={contact.id}\n              id={contact.id}\n              name={contact.name}\n              phone={contact.phone}\n            />\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nContactsList.propTypes = {\n  data: PropTypes.array,\n  isFetching: PropTypes.bool,\n};\n\nexport default ContactsList;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { filterChange } from '../../redux/actions/contacts-actions';\nimport { getFilter } from '../../redux/PhoneBook-selectors';\nimport s from './ContactFilter.module.scss';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const onChange = e => dispatch(filterChange(e.target.value));\n  const filterValue = useSelector(getFilter);\n\n  return (\n    <label>\n      <span className={s.filter_label}>Contact filter</span>\n      <input type=\"text\" name=\"filter\" value={filterValue} onChange={onChange} />\n    </label>\n  );\n};\n\nexport default Filter;\n","import { useGetContactsQuery } from './redux/contactSlice';\nimport ContactInput from './components/ContactInput';\nimport ContactsList from './components/ContactsList/ContactsList';\nimport Filter from './components/ContactFilter';\nimport s from './styles/base.module.scss';\n\nfunction App() {\n  const { data, isFetching, error } = useGetContactsQuery();\n\n  return (\n    <div className={s.main_container}>\n      <h1 className={s.title}>Phonebook</h1>\n\n      <ContactInput data={data} />\n\n      <Filter />\n\n      {error ? `${error.message}` : <ContactsList data={data} isFetching={isFetching} />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}